{
  "tools": [
    {
      "description": "Shows the working tree status",
      "inputSchema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path"
        ],
        "type": "object"
      },
      "name": "git_status"
    },
    {
      "description": "Shows changes in the working directory that are not yet staged",
      "inputSchema": {
        "properties": {
          "context_lines": {
            "default": 3,
            "title": "Context Lines",
            "type": "integer"
          },
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path"
        ],
        "type": "object"
      },
      "name": "git_diff_unstaged"
    },
    {
      "description": "Shows changes that are staged for commit",
      "inputSchema": {
        "properties": {
          "context_lines": {
            "default": 3,
            "title": "Context Lines",
            "type": "integer"
          },
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path"
        ],
        "type": "object"
      },
      "name": "git_diff_staged"
    },
    {
      "description": "Shows differences between branches or commits",
      "inputSchema": {
        "properties": {
          "context_lines": {
            "default": 3,
            "title": "Context Lines",
            "type": "integer"
          },
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "target": {
            "title": "Target",
            "type": "string"
          }
        },
        "required": [
          "repo_path",
          "target"
        ],
        "type": "object"
      },
      "name": "git_diff"
    },
    {
      "description": "Records changes to the repository",
      "inputSchema": {
        "properties": {
          "message": {
            "title": "Message",
            "type": "string"
          },
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path",
          "message"
        ],
        "type": "object"
      },
      "name": "git_commit"
    },
    {
      "description": "Adds file contents to the staging area",
      "inputSchema": {
        "properties": {
          "files": {
            "items": {
              "type": "string"
            },
            "title": "Files",
            "type": "array"
          },
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path",
          "files"
        ],
        "type": "object"
      },
      "name": "git_add"
    },
    {
      "description": "Unstages all staged changes",
      "inputSchema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path"
        ],
        "type": "object"
      },
      "name": "git_reset"
    },
    {
      "description": "Shows the commit logs",
      "inputSchema": {
        "properties": {
          "end_timestamp": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "End timestamp for filtering commits. Accepts: ISO 8601 format (e.g., '2024-01-15T14:30:25'), relative dates (e.g., '2 weeks ago', 'yesterday'), or absolute dates (e.g., '2024-01-15', 'Jan 15 2024')",
            "title": "End Timestamp"
          },
          "max_count": {
            "default": 10,
            "title": "Max Count",
            "type": "integer"
          },
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "start_timestamp": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Start timestamp for filtering commits. Accepts: ISO 8601 format (e.g., '2024-01-15T14:30:25'), relative dates (e.g., '2 weeks ago', 'yesterday'), or absolute dates (e.g., '2024-01-15', 'Jan 15 2024')",
            "title": "Start Timestamp"
          }
        },
        "required": [
          "repo_path"
        ],
        "type": "object"
      },
      "name": "git_log"
    },
    {
      "description": "Creates a new branch from an optional base branch",
      "inputSchema": {
        "properties": {
          "base_branch": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Base Branch"
          },
          "branch_name": {
            "title": "Branch Name",
            "type": "string"
          },
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path",
          "branch_name"
        ],
        "type": "object"
      },
      "name": "git_create_branch"
    },
    {
      "description": "Switches branches",
      "inputSchema": {
        "properties": {
          "branch_name": {
            "title": "Branch Name",
            "type": "string"
          },
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path",
          "branch_name"
        ],
        "type": "object"
      },
      "name": "git_checkout"
    },
    {
      "description": "Shows the contents of a commit",
      "inputSchema": {
        "properties": {
          "repo_path": {
            "title": "Repo Path",
            "type": "string"
          },
          "revision": {
            "title": "Revision",
            "type": "string"
          }
        },
        "required": [
          "repo_path",
          "revision"
        ],
        "type": "object"
      },
      "name": "git_show"
    },
    {
      "description": "List Git branches",
      "inputSchema": {
        "properties": {
          "branch_type": {
            "description": "Whether to list local branches ('local'), remote branches ('remote') or all branches('all').",
            "title": "Branch Type",
            "type": "string"
          },
          "contains": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "The commit sha that branch should contain. Do not pass anything to this param if no commit sha is specified",
            "title": "Contains"
          },
          "not_contains": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "The commit sha that branch should NOT contain. Do not pass anything to this param if no commit sha is specified",
            "title": "Not Contains"
          },
          "repo_path": {
            "description": "The path to the Git repository.",
            "title": "Repo Path",
            "type": "string"
          }
        },
        "required": [
          "repo_path",
          "branch_type"
        ],
        "type": "object"
      },
      "name": "git_branch"
    }
  ]
}
